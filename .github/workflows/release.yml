name: Release
on:
  push:
    tags:
      - "*.*.*"
jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
  build-and-test:
    needs: create-release
    strategy:
      matrix:
        target: [x86_64-unknown-linux-gnu, aarch64-unknown-linux-gnu]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          target: ${{ matrix.target }}
      - name: Install cross-compilation tools
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target ${{ matrix.target }}
      - name: Test
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: test
          args: --release --target ${{ matrix.target }}
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: gitfetch-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/gitfetch
  update-package-files:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Get version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}
      - name: Get checksum
        id: get_checksum
        run: |
          curl -sL https://github.com/${{ github.repository }}/archive/${{ steps.get_version.outputs.VERSION }}.tar.gz | sha256sum | cut -d ' ' -f 1 > checksum.txt
          echo ::set-output name=SHA256::$(cat checksum.txt)
      - name: Update Homebrew formula
        run: |
          sed -i 's/version ".*"/version "${{ steps.get_version.outputs.VERSION }}"/' Formula/gitfetch.rb
          sed -i 's/sha256 ".*"/sha256 "${{ steps.get_checksum.outputs.SHA256 }}"/' Formula/gitfetch.rb
      - name: Update PKGBUILD
        run: |
          sed -i 's/pkgver=.*/pkgver=${{ steps.get_version.outputs.VERSION }}/' PKGBUILD
          sed -i 's/sha256sums=(.*)/sha256sums=("${{ steps.get_checksum.outputs.SHA256 }}")/' PKGBUILD
      - name: Generate .SRCINFO
        run: |
          sudo pacman -Sy --noconfirm pacman-contrib
          makepkg --printsrcinfo > .SRCINFO
      - name: Commit and push changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add Formula/gitfetch.rb PKGBUILD .SRCINFO
          git commit -m "Update package files to version ${{ steps.get_version.outputs.VERSION }}"
          git push
